package com.inthergroup.internship.models;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * An entity CareerLevel composed by two fields (id, name). The Entity
 * annotation indicates that this class is a JPA entity. The Table annotation
 * specifies the name for the table in the db.
 *
 * @author interns
 */
@Entity
@Table(name = "career_levels")
public class CareerLevel {

    // ------------------------
    // PRIVATE FIELDS
    // ------------------------

    /**
     * An autogenerated id
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(length = 20)
    private long id;
    
    @Column(nullable = false, unique = true)
    private String name;
    
    /**
     * Users that belong to this career level.
     */
    @OneToMany(mappedBy="careerLevel", fetch = FetchType.LAZY)
    private List<User> users = new ArrayList<User>();
    
    /**
     *  Benefits for a specific level
     */
    @OneToMany(mappedBy = "primaryKey.careerLevel", orphanRemoval=true,
            cascade = CascadeType.ALL)
    private Set<CareerLevelBenefit> careerLevelBenefits = new HashSet<CareerLevelBenefit>();
    
    /**
     * Tasks for a specific level
     */
    @OneToMany(mappedBy = "primaryKey.careerLevel", orphanRemoval=true,
            cascade = CascadeType.ALL)
    private Set<CareerLevelTodo> careerLevelTodos = new HashSet<CareerLevelTodo>();
    
    /**
     *  The career level's user todos (specific for each user)
     */
    @OneToMany(mappedBy = "primaryKey.careerLevel", orphanRemoval=true,
            cascade = CascadeType.ALL)
    private Set<Todo> userTodos = new HashSet<Todo>();
    
    // ------------------------
    // PUBLIC METHODS
    // ------------------------

    public CareerLevel() { }

    public CareerLevel(long id) {
        this.id = id;
    }
    
    public CareerLevel(String name) {
        this.name = name;
    }

    public CareerLevel(long id, String name) {
        this.id = id;
        this.name = name;
    }
    
    // Getter and setter methods

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public List<User> getUsers() {
        return users;
    }

    public void setUsers(List<User> users) {
        this.users = users;
    }
    
    /**
     * Adds user to this career level.
     * 
     * @param user User to be added.
     */
    public void addUser(User user) {
        this.users.add(user);
        if (user.getCareerLevel() != this) {
            user.setCareerLevel(this);
        }
    }
    
    /**
     * Add a benefit to the career level.
     * Create an association object for the relationship and set its data.
     * 
     * @Param benefitType Benefit type.
     * @Param quantity Number of these benefit types.
     */
    public void addBenefit(BenefitType benefitType, int quantity) {
        CareerLevelBenefit careerLevelBenefit = new CareerLevelBenefit();
        careerLevelBenefit.setCareerLevel(this);
        careerLevelBenefit.setBenefitType(benefitType);
        careerLevelBenefit.setQuantity(quantity);
        careerLevelBenefits.add(careerLevelBenefit);
    }
    
    /**
     * Remove a benefit from the career level.
     * Create an association object for the relationship and set its data.
     * 
     * @Param benefitType Benefit type.
     */
    public void removeBenefit(BenefitType benefitType) {
        CareerLevelBenefit careerLevelBenefit = new CareerLevelBenefit();
        careerLevelBenefit.setCareerLevel(this);
        careerLevelBenefit.setBenefitType(benefitType);
        careerLevelBenefits.remove(careerLevelBenefit);
    }
    
    public Set<CareerLevelBenefit> getCareerLevelBenefits() {
        return careerLevelBenefits;
    }

    public void setCareerLevelBenefits(Set<CareerLevelBenefit> careerLevelBenefits) {
        this.careerLevelBenefits = careerLevelBenefits;
    }

    /**
     *  Add a todo to the career level.
     *  Create an association object for the relationship and set its data.
     *  
     *  @Param todoType Todo type.
     *  @Param quantity The number of these todo types.
     */
    public void addTodo(TodoType todoType, int quantity) {
        CareerLevelTodo careerLevelTodo = new CareerLevelTodo();
        careerLevelTodo.setCareerLevel(this);
        careerLevelTodo.setTodoType(todoType);
        careerLevelTodo.setQuantity(quantity);
        careerLevelTodos.add(careerLevelTodo);
    }
    
    /**
     *  Remove a todo from the career level.
     *  Create an association object for the relationship and set its data.
     *  
     * @param todoType Todo type.
     */
    
    public void removeTodo(TodoType todoType) {
        CareerLevelTodo careerLevelTodo = new CareerLevelTodo();
        careerLevelTodo.setCareerLevel(this);
        careerLevelTodo.setTodoType(todoType);
        careerLevelTodos.remove(careerLevelTodo);
    }

    public Set<CareerLevelTodo> getCareerLevelTodos() {
        return careerLevelTodos;
    }

    public void setCareerLevelTodos(Set<CareerLevelTodo> careerLevelTodos) {
        this.careerLevelTodos = careerLevelTodos;
    }
    
    public Set<Todo> getUserTodos() {
        return userTodos;
    }

    public void setUserTodos(Set<Todo> userTodos) {
        this.userTodos = userTodos;
    }

    @Override
    public String toString() {
        return this.name;
    }
}
